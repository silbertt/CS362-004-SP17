The first bug that I discovered appeared through my testing of the smithy card.  Upon running my tests the number of cards added to the deck was not aligning with what it should be adding.  The smithy card is supposed to add three cards by use of a simple loop.  After discovering this error I looked into the function and discovered that the loop had been altered significantly.  Instead of a loop counting 0-3 it was now a loop where i = handPos and i < 3 still existed.  Needless to say this produced some not so subtle results and caused the test to fail.  This can be seen on line 679 of the dominion.c file.
	I was able to determine there some sort of bug that continually was causing me to receive a seg fault within the adventurer function.  Upon inspection I was able to determine this was due to a testing design error that I was able to solve with the help of GDB (more on this below).
	The final bug that I was able to find was unfortunately not found by my test but by reviewing a function in the ‘new’ code.  Within the adventurer card function there is an increase in the number of buys available which is not a valid action for this card.  It was the discovery of this along with more thought about the overall coverage of my tests that led me to believe that I needed to be testing all items within the gameState struct to ensure accuracy as I was clearly missing something that is simple to test for and should have been tested for in the first place.  This bug can be spotted on line 668 of the dominion.c file.  
